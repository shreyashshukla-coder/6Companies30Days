Problem Link - https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/print-anagrams-together/1/&sa=D&source=editors&ust=1641144134089000&usg=AOvVaw3nW0UBs7uddxIEYUFcRw7I


//Initial Template for C++
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;


 // } Driver Code Ends
//User function Template for C++

class Solution{
  public:
    vector<vector<string> > Anagrams(vector<string>& string_list) {
        map<string,vector<string>> mp;
        vector<vector<string> > result;
        for (auto it = string_list.begin(); it != string_list.end(); it++)
        {
            string s = *it;
            string find = *it;
            sort(find.begin(), find.end());
            if (mp.count(find) == 0)
            {
                vector<string> str_arr;
                str_arr.push_back(s);
                mp.insert({ find,str_arr });
            }
            else
            {
                auto itri = mp[find];
                itri.push_back(s);
                mp[find] = itri;
            }
        }
        for(auto it=mp.begin();it!=mp.end();it++)
        {
            vector<string> newResult;
            newResult.assign(it->second.begin(),it->second.end());
            result.push_back(newResult);
        }
        return result;
    }
};

// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<string> string_list(n);
        for (int i = 0; i < n; ++i)
            cin>>string_list[i]; 
        Solution ob;
        vector<vector<string> > result = ob.Anagrams(string_list);
        sort(result.begin(),result.end());
        for (int i = 0; i < result.size(); i++)
        {
            for(int j=0; j < result[i].size(); j++)
            {
                cout<<result[i][j]<<" ";
            }
            cout<<"\n";
        }
    }

    return 0;
}
  // } Driver Code Ends
